trigger:
  - main
  
variables:
  - group: Variables
  
pool:
    vmImage: ubuntu-latest
  
stages:
  - stage: IaC_Deployment
  
    jobs: 
      - job: Planning
        steps:
        - task: AzureCLI@2
          displayName: Terraform init
          inputs:
            azureSubscription: 'AzureCloud'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: 'terraform init -backend-config="resource_group_name=Services" -backend-config="storage_account_name=intvservicestorageacc" -backend-config="container_name=terraform" -backend-config="key=sbx.tfstate" -backend-config="access_key=$(access_key)"'
        - task: AzureCLI@2
          displayName: Terraform plan
          inputs:
            azureSubscription: 'AzureCloud'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: 'terraform plan -var="subscription_id=$(subscription_id)" -var="client_id=$(client_id)" -var="client_secret=$(client_secret)" -var="tenant_id=$(tenant_id)" -var="company=intvsn" -var="client=lab" -var="environment=sbx" -var="location=westeurope" -var="aks_cluster_name=wordpress" -out="sbx.tfplan"'
        - task: AzureCLI@2
          displayName: Saving plan
          inputs:
            azureSubscription: 'AzureCloud'
            scriptType: 'pscore'
            scriptLocation: 'inlineScript'
            inlineScript: |
              $tfplan = cat sbx.tfplan
              echo "##vso[task.setvariable variable=tfplan]$tfplan"
  
      - deployment: publishinternal
        dependsOn: Planning
        displayName: 'Approval'
        environment: 'sbx'
  
      - job: Applying
        dependsOn: publishinternal
        steps:
        - task: AzureCLI@2
          displayName: Reading plan
          inputs:
            azureSubscription: 'AzureCloud'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: echo $tfplan > sbx.tfplan
        - task: AzureCLI@2
          displayName: Terraform apply
          inputs:
            azureSubscription: 'AzureCloud'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: 'terraform apply'